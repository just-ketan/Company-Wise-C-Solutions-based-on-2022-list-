/*
Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by
at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. 
The returned string should only have a single space separating the words. 
Do not include any extra spaces.
*/

class Solution {
public:
    string reverseWords(string s) {
        // need to store the strings and their index
        //vector<pair<string,int>> = nums;
        
        vector<string> words;
        // stringstream ss(s);
        // string word;

        // while(ss > word){
        //     words.push_back(word);
        // }
        int i=0, n=s.length();
        while(i<n){
            while(i<n && s[i]==' ') i++;
            // skip leading spaces
            if(i<n){
                int start = i;
                while(i<n && s[i]!=' ') i++;
                words.push_back(s.substr(start,i-start));
            }
        }
        string res = "";
        for(int i =words.size()-1; i>0; i--){
            res += words[i];
            if(i > 0)   res+= " ";
        }
        return res
    }
};
